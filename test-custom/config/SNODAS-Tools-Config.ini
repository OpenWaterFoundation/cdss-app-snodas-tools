# SNODAS Tools configuration file:
# - uses an INI format (see https://en.wikipedia.org/wiki/INI) and the SNODAS Tools documentation
# - define folders up front because other properties reference the folders

# ======================== Folders =======================================================================
# Names of SNODAS Tools folders:
# - put this before other properties in case folders are used in other property definitions
# - list in the relative order from root through processing steps
#
# root_folder: Location and name of SNODAS Tools root folder (absolute path).
# static_data_folder: Name of folder containing all static data (inc. Basin Boundary Shapefile).
# processed_data_folder: Name of folder containing all processed output data.
# download_snodas_tar_folder: Name of folder containing all daily SNODAS .tar files downloaded from FTP site.
# untar_snodas_tif_folder: Name of folder containing national daily SNODAS .tif files.
# clip_proj_snodas_tif_folder: Name of folder containing clipped and projected daily SNODAS .tif files
# create_snowcover_tif_folder: Name of folder containing clipped binary snow cover .tif files.
# calculate_stats_folder: Name of folder containing the output products. Contains the following 2 folders: 
#   output_stats_by_date_folder:
#     Name of folder containing the output zonal snowpack statistics organized by date.
#     Also contains the daily output GeoJSONs & shapefiles.
#   output_stats_by_basin_folder: Name of folder containing the output zonal snowpack statistics organized by basin.
# timeseries_folder: Folder where TSTool processing occurs.
#   timeseries_graph_png_folder:  Folder for TSTool output png images, for upload to the web.

[Folders]

# root_dir = /var/opt/snodas-tools/
# root_dir = /media/SNODAS2/SNODAS_Tools/
#root_folder = D:/Users/steve/cdss-dev/CDSS-SNODAS-Tools/git-repos/cdss-app-snodas-tools/test-custom
# Use PARENT_PARENT_FOLDER, which is equivalent to ../../, so that the configuration file is portable.
root_folder = PARENT_PARENT_FOLDER
config_folder = ${root_folder}/config
static_data_folder = ${root_folder}/staticData
processed_data_folder = ${root_folder}/processedData
# Listed in order of processing.
download_snodas_tar_folder = ${processed_data_folder}/1_DownloadSNODAS
untar_snodas_tif_folder = ${processed_data_folder}/2_SetFormat
clip_proj_snodas_tif_folder = ${processed_data_folder}/3_ClipToExtent
create_snowcover_tif_folder = ${processed_data_folder}/4_CreateSnowCover
calculate_stats_folder = ${processed_data_folder}/5_CalculateStatistics
output_stats_by_date_folder = ${calculate_stats_folder}/SnowpackStatisticsByDate
output_stats_by_basin_folder = ${calculate_stats_folder}/SnowpackStatisticsByBasin
timeseries_folder = ${processed_data_folder}/6_CreateTimeSeriesProducts
timeseries_graph_png_folder = ${timeseries_folder}/SnowpackGraphsByBasin

# Workflow files control processing and should be separate from the dynamic results:
# - because most of the workflow is controlled by the Python scripts,
#   the workflow currently consists of TSTool command file and supporting files
workflow_folder = ${root_folder}/workflow
timeseries_products_workflow_folder = ${workflow_folder}/6_CreateTimeSeriesProducts

# ========================================================================================================

# =============================== Program Install ========================================================
# Configuration for the software programs used by SNODAS Tools:
# - QGIS for spatial data processing
# - TSTool for time series processing
#
# qgis_path: The full location to the QGIS installation on the local desktop.
# tstool_pathname: The full location of the TsTool program (TSTool.exe) on the local machine.
# tstool_create_snodas_graphs_command_file: The full location of the create-snodas-swe-graphs.tstool command file.

[ProgramInstall]

# qgis_path = C:/OSGeo4W/apps/qgis
#qgis_path = "C:/Program Files/QGIS 3.22.16/apps/qgis-ltr"
tstool_path = C:/CDSS/TSTool-14.8.0/bin/tstool.exe
tstool_create_snodas_graphs_command_file = ${Folders.timeseries_products_workflow_folder}/create-snodas-swe-graphs.tstool
# Not uploading to AWS for custom configuration.
#aws_batch_pathname =  D:/Users/steve/cdss-dev/CDSS-SNODAS-Tools/git-repos/cdss-app-snodas-tools/test-CDSS/cloud/copyAllToOwfAmazonS3.bat

# ========================================================================================================

# =============================== SNODAS_FTPSite =========================================================
# Configuration properties for the FTP site containing the daily SNODAS data.
#
# host: the FTP site hosting the SNODAS data.
# username: sidads.colorado.edu is public so the username can remain 'anonymous'.
# password: sidads.colorado.edu is public so the password can remain 'None'.
# folder_path: the pathname to the SNODAS data (defaulted to 'masked' data).
# null_value: the no data value of the SNODAS data, can be found at
# http://nsidc.org/pubs/documents/special/nsidc_special_report_11.pdf

[SNODAS_FTPSite]

host = sidads.colorado.edu
username = anonymous
password = None
folder_path = /DATASETS/NOAA/G02158/masked/
null_value = -9999

# ========================================================================================================

# ============================== BasinBoundaryShapefile ==================================================
# Configuration properties for the basin boundary shapefile (the zonal input dataset).
#
# pathname:
#   Location and name of the basin boundary shapefile. The shapefile should be stored in the static_data_folder.
# basin_id_fieldname:
#   The name of the field in the shapefile attribute table that uniquely identifies each basin.
#   The values of this field will be exported to the output statistics csv files. 

[BasinBoundaryShapefile]

pathname = ${Folders.static_data_folder}/globalwatershed-Albers.shp
basin_id_fieldname = LOCAL_ID

# ========================================================================================================

# =========================== Projections ================================================================
# Configuration properties for the projections used throughout the SNODAS Tools.
#
# datum_epsg:
#   The EPSG code of the datum used to define the national SNODAS daily grid WGS84 (EPSG 4326) is recommended.
# calcstats_proj_epsg:
#   The EPSG code of the projection used to calculate the zonal statistics, an equal-area projection is recommended.
#   This should be the same projection as used on the BasinBoundaryShapefile.
# calculate_cellsize_x:
#   The desired cell size to resample the daily SNODAS grid before calculating the zonal statistics (x axis).
#   Remember to apply units used in the calcstats_proj_epsg projection.
# calculate_cellsize_y:
#   The desired cell size to resample the daily SNODAS grid before calculating the zonal statistics (y axis).
#   Remember to apply units used in the calcstats_proj_epsg projection.
# output_proj_epsg:
#   The EPSG code of the desired projection for the output layers, (daily GeoJSON and daily shapefile).

[Projections]

#datum_epsg = 4326
datum_crs = EPSG:4326
# 102003 - Albers Equal Area Conic:
# - apparently it is not found in EPSG so use ESRI
#calcstats_proj_epsg = 102003
calcstats_crs = ESRI:102003
calculate_cellsize_x = 463.1475
calculate_cellsize_y = 463.1475 
# NAD83, Zone 13 (what Colorado has used).
#output_proj_epsg = 26913
output_crs = EPSG:26913

# ========================================================================================================

# =========================== OutputLayers ===============================================================
# Configuration properties for the output layers (GeoJSON, Shapefile, and TimeSeries graphs).
#
# shp_zip: Determine if the shapefile files should be zipped.
#   True: Shapefile files are zipped
#   False: Shapefile files are left independent
# shp_delete_originals: Only used if shp_zip = True. Determine if unzipped shapefile files should be deleted.
#   True: independent shapefile files are deleted, False: independent shapefile files are saved along with the zipped file
# geojson_precision:
#   The number of decimal places included in the geoJSON output geometry.
#   The more decimal places, the more accurate the geometry and the larger the file size.
# tsgraph_weekly_update: Whether to update the time series graphs daily or weekly.
#   True: updates TS graphs weekly, based on tsgraph_weekly_update_date setting.
#   False: updates TS graphs after every run of the SNODAS scripts, most-likely daily.
# tsgraph_weekly_update_date:
#   Only used if tsgraph_weekly_update is set to True.
#   The day of the week (number) that the TS graphs are set to update. (Monday: 0, Tuesday: 1 ...) 
# upload_to_s3:
#   Whether to upload the SNODAS_Tools results to amazon web services given the specifics of the batch file
#   input in function 'push_to_AWS' in 'SNODAS_utilities.py'.
# gcp_upload:
#   Whether to upload the SNODAS_Tools results to the Google Cloud Platform bucket.
# process_daily_tstool_graphs:
#   If True, the TSTool graphs will be created for EACH processed date.
# process_historical_tstool_graphs:
#   If True, the TSTool graphs will be created for the entire history of dates.

[OutputLayers]

dev_environment = True
shp_zip = True
shp_delete_originals = True
geojson_precision = 5
geojson_zip = False
tsgraph_weekly_update = False
tsgraph_weekly_update_date = 6
upload_to_s3 = False
gcp_upload = False
process_daily_tstool_graphs = False
process_historical_tstool_graphs = True

# ========================================================================================================

# ============================ SNODASParameters ==========================================================
# Configuration properties for the 7 SNODAS parameters other than SWE packaged in the 
# downloaded daily SNODAS .tar file.
#
# save_all_parameters: Whether to delete the 7 national grids of SNODAS parameters.
#   True: the daily 7 national grids of SNODAS parameters (other than SWE) are saved
#   in a folder called download_snodas_tar_folder/OtherParameters.
#   False: the daily 7 national grids of SNODAS parameters are deleted.

[SNODASParameters]

save_all_parameters = False

# ========================================================================================================

# ============================ OptionalZonalStatistics ===================================================
# Configuration properties for the calculation of the optional SWE calculations.
#
# calculate_swe_minimum: Enables the zonal stat of daily minimum SWE (mm and in).
#   True: enabled.
#   False: disabled.
# calculate_swe_maximum: Enables the zonal stat of daily maximum SWE (mm and in).
#   True: enabled.
#   False: disabled.
# calculate_swe_standard_deviation: boolean logic to enable the zonal stat of 
# daily standard deviation of SWE (mm and in).
#   True: enabled.
#   False: disabled.

[OptionalZonalStatistics]

calculate_swe_minimum = False
calculate_swe_maximum = False
calculate_swe_standard_deviation = False

# ========================================================================================================

# =============================== Troubleshooting ========================================================
# Troubleshooting properties are separate from logging.
# For example, keep intermediate files so that they can be reviewed.

[Troubleshooting]

# Indicate whether intermediate files should be kept:
# - will result in wasted disk space but may be useful for troubleshooting
# - kept files will need to be manually removed unless the same date is reprocessed with keep_files = False
keep_files = False

# ========================================================================================================

# =========================== Python Logging =============================================================
# Configuration properties for the logging functionality of the SNODAS Tools. 
# Refer to https://docs.python.org/3/howto/logging.html#configuring-logging for
# descriptions on the following logging sections. 

[loggers]
keys=root,automated,interactive,utilities

[handlers]
keys=fileHandler,consoleHandler

[formatters]
keys=simpleFormatter

[logger_root]
level=WARNING
handlers=consoleHandler

[logger_automated]
level=DEBUG
handlers=fileHandler
qualname=automated
propagate=0

[logger_interactive]
level=DEBUG
handlers=fileHandler
qualname=interactive
propagate=0

[logger_utilities]
level=DEBUG
handlers=fileHandler
qualname=utilities
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=NOTSET
formatter=simpleFormatter
args=(sys.stdout,)

# https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler
[handler_fileHandler]
class=handlers.TimedRotatingFileHandler
level=NOTSET
formatter=simpleFormatter
args=('../test-custom/processedData/SNODASTools.log', 'W0', 1, 5)

# https://docs.python.org/3/library/logging.html#logrecord-attributes
[formatter_simpleFormatter]
format=[%(levelname)s | %(asctime)s | %(name)s] %(message)s
