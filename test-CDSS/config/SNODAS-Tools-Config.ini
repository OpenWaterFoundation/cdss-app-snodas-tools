# Configuration regarding the external programs, QGIS and TsTool.
#	qgis_pathname: the full location to the QGIS installation on the local desktop
# 	tstool_pathname: the full location of the TsTool program (TsTool.exe) on the local desktop
#	tstool_create-snodas-graphs_pathname: the full location of the create-snodas-swe-graphs.TSTool command file

[ProgramInstall]
qgis_pathname = C:/OSGeo4W/apps/qgis
tstool_pathname = C:/CDSS/TSTool-12.00.00beta/bin/TSTool.exe
tstool_create-snodas-graphs_pathname = C:\Users\intern1\cdss-dev\CDSS-SNODAS-Tools\git-repos\cdss-app-snodas-tools\pycharm-project\create-snodas-swe-graphs.TSTool





# Configurations regarding the FTP site containing the daily SNODAS data
# 	host: the FTP site hosting the SNODAS data
# 	username: sidads.colorado.edu is public so the username can remain 'anonymous'
# 	password: sidads.colorado.edu is public so the password can raemain 'None'
# 	folder_path: the pathname to the SNODAS data (defaulted to 'masked' data)
# 	null_value: the no data value of the SNODAS data, can be found at 
# 	http://nsidc.org/pubs/documents/special/nsidc_special_report_11.pdf

[SNODAS_FTPSite]
host = sidads.colorado.edu
username = anonymous
password = None
folder_path = /DATASETS/NOAA/G02158/masked/
null_value = -9999





# Names of SNODAS Tools' Output Folders 
#	root_pathname: location and name of root folder
#	static_data_folder: name of folder containing all static data 
#	(inc. Basin Boundary Shapefile)
#	processed_data_folder: name of folder containing all processed data 
#	download_snodas_tar_folder: name of folder containing all daily SNODAS .tar files
#	downloaded from FTP site
#	untar_snodas_tif_folder: name of folder containing national daily SNODAS .tif files
#	clip_proj_snodas_tif_folder: name of folder containing clipped and projected
#	daily SNODAS .tif files
#	create_snowvover_tif_folder: name of folder containing clipped binary snow 
#	cover .tif files
#	calculate_stats_folder: name of folder containing the output products. Contains the 
# 	following 2 folders: 
#		output_stats_by_date_folder: name of folder containing the output zonal snowpack
# 		statistics organized by date. Also contatins the daily output GeoJSONs & shapefiles.
#		output_stats_by_basin_folder: name of folder containing the output zonal
#		snopack statistics organized by basin. 

[Folders]
root_pathname = C:\Users\intern1\cdss-dev\CDSS-SNODAS-Tools\git-repos\cdss-app-snodas-tools\test-CDSS\
static_data_folder = staticData/
processed_data_folder = processedData/
download_snodas_tar_folder = 1_DownloadSNODAS
untar_snodas_tif_folder = 2_SetFormat
clip_proj_snodas_tif_folder = 3_ClipToExtent
create_snowcover_tif_folder = 4_CreateSnowCover
calculate_stats_folder = 5_CalculateStatistics/
output_stats_by_date_folder = SnowpackStatisticsByDate
output_stats_by_basin_folder = SnowpackStatisticsByBasin
timeseries_folder = 6_CreateTimeSeriesProducts/
timeseries_graph_png_folder = SnowpackGraphsByBasin






# Configurations regarding the basin boundary shapefile (the zonal input dataset)
#	pathname: location and name of the basin boundary shapefile. The shapefile should
#	be stored in the static_data_folder
#	basin_id_fieldname: the name of the field in the shapefile attribute table that
#	uniquely identifies each basin. The values of this field will be exported to the 
#	output statistics csv files.	 

[BasinBoundaryShapefile]
pathname = C:\Users\intern1\cdss-dev\CDSS-SNODAS-Tools\git-repos\cdss-app-snodas-tools\test-CDSS\staticData\CO_Basins_Albers.shp
basin_id_fieldname = LOCAL_ID





# Configurations regarding the projections used throughtout the SNODAS Tools
#
# 	datum_epsg: the EPSG code of the datum used to define the national SNODAS daily grid 
#	WGS84 (EPSG 4326) is recommended.
# 	calcstats_proj_epsg: the EPSG code of the projection used to calcualte the zonal 
#	statistics, an equal-area projection is recommended. This should be the same projection
#	as used on the BasinBoundaryShapefile.
#	calculate_cellsize_x: the desired cell size to resample the daily SNODAS grid before 
#	calculating the zonal statistics (x axis). Remember to apply units used in the 
#	calcstats_proj_epsg projection.
#	calculate_cellsize_y: the desired cell size to resample the daily SNODAS grid before 
#	calculating the zonal statistics (y axis). Remember to apply units used in the 
#	calcstats_proj_epsg projection.
# 	output_proj_epsg: the EPSG code of the desired projection for the output layers, 
#	(daily GeoJSON and daily shapefile)

[Projections]
datum_epsg = 4326
calcstats_proj_epsg = 102003
calculate_cellsize_x = 463.1475
calculate_cellsize_y = 463.1475 
output_proj_epsg = 26913




# Configurations regarding the output layers (GeoJSON, Shapefile, and TimeSeries graphs.) 
#	shp_zip: boolean logic to determine if the shapefile files should be zipped
#	True: shapefile files are zipped, False: shapfile files are left independent
#	shp_delete_orginals: only used if shp_zip = True. boolean logic to determine if 
#	unzipped shapefile files should be deleted.
#	True: independent shapefile files are deleted, False: independent shapefile files 
#	are saved alongwith the zipped file
#	geojson_precision: the number of decimal places included in the geoJSON output 
#	geometry. The more decimal places, the more accurate the geometry and the larger 
#	the file size.
#	tsgraph_weekly_update: boolean logic to determine whether or not to update the 
#	time series graphs daily or weekly
#	True: updates TS graphs weekly, based on tsgraph_weekly_update_date setting
#	False: updates TS graphs after every run of the SNODAS scripts, most-likely daily
#	tsgraph_weekly_update_date: only used if tsgraph_weekly_update is set to True. The
#	day of the week that the TS graphs are set to update (Monday: 0, Tuesday: 1 ...) 

[OutputLayers] 
shp_zip = True
shp_delete_originals = True
geojson_precision = 5
tsgraph_weekly_update = True
tsgraph_weekly_update_date = 6





# Configuration regarding the 7 SNODAS parameters other than SWE packaged in the 
# downloaded daily SNODAS .tar file
# 	save_all_parameters: boolean logic to determine whether or not to delete the
#	7 national grids of SNODAS parameters 
# 	True: the daily 7 national grids of SNODAS parameters (other than SWE) are saved
#	in a folder called  download_snodas_tar_folder/OtherParameters
# 	False: the daily 7 national grids of SNODAS parameters are deleted

[SNODASparameters]
save_all_parameters = False





# Configuration to enable the calculation of the optional SWE calculations
#	calculate_swe_minimum: boolean logic to enable the zonal stat of daily minimum 
#	SWE (mm and in). True: enable, False: disable.
#	calculate_swe_maximum: boolean logic to enable the zonal stat of daily maximum 
#	SWE (mm and in). True: enable, False: disable.
#	calculate_swe_standard_deviation: boolean logic to enable the zonal stat of 
#	daily standard deviation of SWE (mm and in). True: enable, False: disable.

[OptionalZonalStatistics]
calculate_swe_minimum = False
calculate_swe_maximum = False
calculate_swe_standard_deviation = False




# Configurations regarding the logging functionality of the SNODAS Tools. 
# 	Refer to https://docs.python.org/2/howto/logging.html#configuring-logging
# 	for descriptions on the following logging sections. 

[loggers]
keys=root,log02

[handlers]
keys=fileHandler, consoleHandler

[formatters]
keys=simpleFormatter

[logger_root]
level=WARNING
handlers=consoleHandler

[logger_log02]
level=DEBUG
handlers=fileHandler
qualname=log02
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=NOTSET
formatter=simpleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.TimedRotatingFileHandler
level=NOTSET
formatter=simpleFormatter
args=('..\processedData\SNODASTools.log', 'W0', 1, 5)

[formatter_simpleFormatter]
format=%(asctime)s %(message)s